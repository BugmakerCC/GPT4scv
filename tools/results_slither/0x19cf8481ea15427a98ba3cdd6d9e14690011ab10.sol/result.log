INFO:Slither:Compilation warnings/errors on /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:77:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:134:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                               ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:204:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function daoPOLSKAtokens() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:211:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:214:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:223:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:226:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:330:10: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		} else throw;
		       ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:341:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:352:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:368:3: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		throw;
		^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:389:23: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!funding) throw;
                      ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:392:29: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.value == 0) throw;
                            ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:395:11: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
          throw;
          ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:403:3: Warning: Use of the "var" keyword is deprecated.
	 var numTokensRAW = msg.value;
	 ^--------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:405:9: Warning: Use of the "var" keyword is deprecated.
        var numTokens = msg.value * CreationRate;
        ^-----------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:432:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	if(funding==true) throw;
	                  ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:433:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		 	if (!owner.send(this.balance)) throw;
		 	                               ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:437:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	      if (msg.sender != owner) throw;
	                               ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:442:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	      if (msg.sender != owner) throw;
	                               ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:447:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	      if (msg.sender != owner) throw;
	                               ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:451:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
	      if (msg.sender != migrationMaster) throw;
	                                         ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:458:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (block.number <= fundingEndBlock+8*oneweek) throw;
                                                       ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:469:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (migratestate) throw;
                          ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:473:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value == 0) throw;
                         ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:474:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > balances[msg.sender]) throw;
                                           ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:485:22: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (funding) throw;
                     ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:486:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!refundstate) throw;
                          ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:488:9: Warning: Use of the "var" keyword is deprecated.
        var DAOPLTokenValue = balances[msg.sender];
        ^-----------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:489:9: Warning: Use of the "var" keyword is deprecated.
        var ETHValue = balancesRAW[msg.sender];
        ^----------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:490:28: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ETHValue == 0) throw;
                           ^---^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:75:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:370:3: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
		sendTokenAway t = transfers[numTransfers];
		^-------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:9:28: Warning: Functions in interfaces should be declared external.
interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }
                           ^-----------------------------------------------------------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:110:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:120:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:137:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:263:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:281:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:293:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(msg.sender, _to, _value);
      ^-------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:305:7: Warning: Invoking events without "emit" prefix is deprecated.
      Transfer(_from, _to, _value);
      ^--------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:316:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:328:9: Warning: Invoking events without "emit" prefix is deprecated.
        receivedEther(msg.sender, msg.value);
        ^----------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:346:5: Warning: Invoking events without "emit" prefix is deprecated.
    UpdatedTokenInformation(name, symbol);
    ^-----------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:412:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, holder, numTokens);
        ^----------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:421:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, migrationMaster, additionalTokens);
        ^--------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:433:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		 	if (!owner.send(this.balance)) throw;
		 	                ^----------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:439:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        owner.send(this.balance - SubX);
                   ^----------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:439:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        owner.send(this.balance - SubX);
        ^-----------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:465:14: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
		owner.send(this.balance);
		           ^----------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:465:3: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
		owner.send(this.balance);
		^----------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:480:9: Warning: Invoking events without "emit" prefix is deprecated.
        Migrate(msg.sender, migrationAgent, _value);
        ^-----------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:494:9: Warning: Invoking events without "emit" prefix is deprecated.
        Refund(msg.sender, ETHValue);
        ^--------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:14:5: Warning: No visibility specified. Defaulting to "public". 
    function migrateFrom(address _from, uint256 _value);
    ^--------------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:19:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address who) constant returns (uint);
  ^------------------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:20:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address owner, address spender) constant returns (uint);
  ^-------------------------------------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:22:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address to, uint value) returns (bool ok);
  ^----------------------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:23:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address from, address to, uint value) returns (bool ok);
  ^----------------------------------------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:24:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address spender, uint value) returns (bool ok);
  ^--------------------------------------------------------------^
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:107:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:114:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:124:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:128:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:141:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:204:3: Warning: No visibility specified. Defaulting to "public". 
  function daoPOLSKAtokens() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:285:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:298:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:310:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:314:3: Warning: No visibility specified. Defaulting to "public". 
  function approve(address _spender, uint256 _value) returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:320:3: Warning: No visibility specified. Defaulting to "public". 
  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:338:3: Warning: No visibility specified. Defaulting to "public". 
  function setTokenInformation(string _name, string _symbol) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:349:1: Warning: No visibility specified. Defaulting to "public". 
function setChainsAddresses(address chainAd, int chainnumber) {
^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:366:2: Warning: No visibility specified. Defaulting to "public". 
	function sendTokenAw(address StandardTokenAddress, address receiver, uint amount){
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:387:9: Warning: No visibility specified. Defaulting to "public". 
        function createDaoPOLSKAtokens(address holder) payable {
        ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:424:2: Warning: No visibility specified. Defaulting to "public". 
	function setBonusCreationRate(uint newRate){
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:59:3: Warning: Function state mutability can be restricted to pure
  function max64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:63:3: Warning: Function state mutability can be restricted to pure
  function min64(uint64 a, uint64 b) internal constant returns (uint64) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:67:3: Warning: Function state mutability can be restricted to pure
  function max256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:71:3: Warning: Function state mutability can be restricted to pure
  function min256(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:75:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:103:3: Warning: Function state mutability can be restricted to pure
  function isToken() public constant returns (bool weAre) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:360:3: Warning: Function state mutability can be restricted to pure
  function DAOPolskaTokenICOregulations() external returns(string wow) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:498:1: Warning: Function state mutability can be restricted to pure
function preICOregulations() external returns(string wow) {
^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
daoPOLSKAtokens.FundsTransfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#431-434) sends eth to arbitrary user
	Dangerous calls:
	- ! owner.send(this.balance) (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#433)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Reentrancy in daoPOLSKAtokens.sendTokenAw (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366-376):
	External calls:
	- t.coinContract.transfer(receiver,amount) (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#374)
	State variables written after the call(s):
	- numTransfers (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#375)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
daoPOLSKAtokens.sendTokenAw (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366-376) does not use the value returned by external calls:
	-t.coinContract.transfer(receiver,amount) (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#374)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#75-79) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
ERC20.totalSupply should be constant (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#18)
daoPOLSKAtokens.fundingEndBlock should be constant (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#383)
daoPOLSKAtokens.migrationAgent should be constant (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#172)
daoPOLSKAtokens.tokenCreationRate should be constant (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#379)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#77:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#134:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#211:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#214:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#223:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#226:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#330:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#341:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#352:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#368:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#389:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#392:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#395:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#432:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#433:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#437:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#442:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#447:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#451:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#458:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#469:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#473:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#474:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#485:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#486:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#490:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
tokenRecipient.receiveApproval (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#9) should be declared external
MigrationAgent.migrateFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#14) should be declared external
ERC20.balanceOf (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#19) should be declared external
StandardToken.balanceOf (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#124-126) should be declared external
ERC20.allowance (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#20) should be declared external
StandardToken.allowance (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#141-143) should be declared external
StandardToken.transfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#107-112) should be declared external
ERC20.transfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#22) should be declared external
ERC20.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#23) should be declared external
StandardToken.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#114-122) should be declared external
ERC20.approve (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#24) should be declared external
StandardToken.approve (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#128-139) should be declared external
StandardToken.isToken (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#103-105) should be declared external
daoPOLSKAtokens.setSupply (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#209-220) should be declared external
daoPOLSKAtokens.setotherchainstotalsupply (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#221-232) should be declared external
daoPOLSKAtokens.approveAndCall (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242-250) should be declared external
daoPOLSKAtokens.burn (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#259-265) should be declared external
daoPOLSKAtokens.burnFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#275-283) should be declared external
daoPOLSKAtokens.transfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#285-296) should be declared external
daoPOLSKAtokens.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#298-308) should be declared external
daoPOLSKAtokens.balanceOf (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#310-312) should be declared external
daoPOLSKAtokens.allowance (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#320-322) should be declared external
daoPOLSKAtokens.fallback (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#326-332) should be declared external
daoPOLSKAtokens.setTokenInformation (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#338-347) should be declared external
daoPOLSKAtokens.setChainsAddresses (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#349-358) should be declared external
daoPOLSKAtokens.sendTokenAw (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366-376) should be declared external
daoPOLSKAtokens.createDaoPOLSKAtokens (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#387-423) should be declared external
daoPOLSKAtokens.setBonusCreationRate (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#424-429) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol:
	- pragma solidity^0.4.11 (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#8): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'tokenRecipient' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#9) is not in CapWords
Parameter '_owner' of StandardToken.balanceOf (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#124) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#141) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#141) is not in mixedCase
Parameter '_to' of StandardToken.transfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#107) is not in mixedCase
Parameter '_value' of StandardToken.transfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#107) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#114) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#114) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#114) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#128) is not in mixedCase
Parameter '_value' of StandardToken.approve (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#128) is not in mixedCase
Contract 'daoPOLSKAtokens' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#151-503) is not in CapWords
Struct 'daoPOLSKAtokens.sendTokenAway' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#180-184) is not in CapWords
Event 'daoPOLSKAtokens.receivedEther' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#195) is not in CapWords
Parameter '_spender' of daoPOLSKAtokens.approveAndCall (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242) is not in mixedCase
Parameter '_value' of daoPOLSKAtokens.approveAndCall (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242) is not in mixedCase
Parameter '_extraData' of daoPOLSKAtokens.approveAndCall (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#242) is not in mixedCase
Parameter '_value' of daoPOLSKAtokens.burn (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#259) is not in mixedCase
Parameter '_from' of daoPOLSKAtokens.burnFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#275) is not in mixedCase
Parameter '_value' of daoPOLSKAtokens.burnFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#275) is not in mixedCase
Parameter '_to' of daoPOLSKAtokens.transfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#285) is not in mixedCase
Parameter '_value' of daoPOLSKAtokens.transfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#285) is not in mixedCase
Parameter '_from' of daoPOLSKAtokens.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#298) is not in mixedCase
Parameter '_to' of daoPOLSKAtokens.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#298) is not in mixedCase
Parameter '_value' of daoPOLSKAtokens.transferFrom (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#298) is not in mixedCase
Parameter '_owner' of daoPOLSKAtokens.balanceOf (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#310) is not in mixedCase
Parameter '_spender' of daoPOLSKAtokens.approve (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#314) is not in mixedCase
Parameter '_value' of daoPOLSKAtokens.approve (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#314) is not in mixedCase
Parameter '_owner' of daoPOLSKAtokens.allowance (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#320) is not in mixedCase
Parameter '_spender' of daoPOLSKAtokens.allowance (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#320) is not in mixedCase
Parameter '_name' of daoPOLSKAtokens.setTokenInformation (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#338) is not in mixedCase
Parameter '_symbol' of daoPOLSKAtokens.setTokenInformation (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#338) is not in mixedCase
Function 'daoPOLSKAtokens.DAOPolskaTokenICOregulations' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#360-362) is not in mixedCase
Parameter 'StandardTokenAddress' of daoPOLSKAtokens.sendTokenAw (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#366) is not in mixedCase
Function 'daoPOLSKAtokens.FundsTransfer' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#431-434) is not in mixedCase
Function 'daoPOLSKAtokens.PartialFundsTransfer' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#436-440) is not in mixedCase
Parameter 'SubX' of daoPOLSKAtokens.PartialFundsTransfer (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#436) is not in mixedCase
Parameter '_value' of daoPOLSKAtokens.migrate (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#467) is not in mixedCase
Variable 'daoPOLSKAtokens.Chain1' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#167) is not in mixedCase
Variable 'daoPOLSKAtokens.Chain2' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#168) is not in mixedCase
Variable 'daoPOLSKAtokens.Chain3' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#169) is not in mixedCase
Variable 'daoPOLSKAtokens.Chain4' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#170) is not in mixedCase
Variable 'daoPOLSKAtokens.CreationRate' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#381) is not in mixedCase
Constant 'daoPOLSKAtokens.oneweek' (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#382) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
StandardToken.balancesRAW (/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol#98) is never used in StandardToken
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/sb/0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol analyzed (6 contracts), 105 result(s) found
