Non-hexadecimal digit found
Traceback (most recent call last):
  File "conkas.py", line 111, in main
    ssa = Recover(bytecode, edges=[], optimize=True)
  File "/conkas/rattle/recover.py", line 768, in __init__
    self.internal = InternalRecover(filedata, edges, optimize, split_functions)
  File "/conkas/rattle/recover.py", line 32, in __init__
    self.recover(dispatch)
  File "/conkas/rattle/recover.py", line 95, in recover
    self.identify_blocks(function)
  File "/conkas/rattle/recover.py", line 167, in identify_blocks
    insns = list(EVMAsm.disassemble_all(binascii.unhexlify(self.filedata), 0))
binascii.Error: Non-hexadecimal digit found
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Analysing /sb/spank_chain_payment.sol:ECTools...
Vulnerability: Integer Underflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x13ab. Line number: 159.
If a = 0
and b = 1
Vulnerability: Integer Underflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x1353. Line number: 155.
If a = 0
and b = 1
Vulnerability: Integer Overflow. Maybe in function: toEthereumSignedMessage(string). PC: 0x43d. Line number: 139.
If a = 32
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639888
Vulnerability: Integer Overflow. Maybe in function: toEthereumSignedMessage(string). PC: 0xee9. Line number: 142.
If a = 32
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639744
Vulnerability: Integer Overflow. Maybe in function: parseInt16Char(string). PC: 0x33a. Line number: 116.
If a = 128
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639745
Analysing /sb/spank_chain_payment.sol:HumanStandardToken...
Vulnerability: Integer Overflow. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0xd58. Line number: 254.
If a = 32
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639744
Vulnerability: Integer Overflow. Maybe in function: transfer(address,uint256). PC: 0xc05. Line number: 189.
If a = 99132599145121643357820625909322340289690114320205026200733193070404581572005
and b = 26067370202449811975953348413027839729320185741513786165892324479781200831351
Vulnerability: Integer Overflow. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0xe93. Line number: 259.
If a = 32
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639680
Vulnerability: Integer Overflow. Maybe in function: transferFrom(address,address,uint256). PC: 0x83c. Line number: 198.
If a = 87974877321161885315401424445608443944214065880518975214244498536624083203473
and b = 42404301290968385500886852792591369914104611689100894142137129105644022363141
Vulnerability: Integer Overflow. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0x4be. Line number: 252.
If a = 31
and b = 115792089237316195423570985008687907853269984665640564039457584007913129639905
Vulnerability: Reentrancy. Maybe in function: approveAndCall(address,uint256,bytes). PC: 0xefe. Line number: 259.
Analysing /sb/spank_chain_payment.sol:LedgerChannel...
Analysing /sb/spank_chain_payment.sol:StandardToken...
Vulnerability: Integer Overflow. Maybe in function: transferFrom(address,address,uint256). PC: 0x4db. Line number: 198.
If a = 80083123795896097084412254112594103752928399345314438083303243406883737299184
and b = 82077620030253128071957004611390469028271330302789741394127734573581651889834
Vulnerability: Integer Overflow. Maybe in function: transfer(address,uint256). PC: 0x755. Line number: 189.
If a = 61826460733163246278075767850958046573875727151179849828290919789441366264963
and b = 72254958570151109432812352589257810354780306047945939915677114230884724030595
Analysing /sb/spank_chain_payment.sol:Token...
Nothing to analyse
