{
    "file_name": "tod_symex_path_5.json",
    "from_function": "fundPuppets",
    "to_function": "setExtra",
    "bug_type": "tod_amount_or_receiver",
    "src_node": "\"BlockID: 510\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 513\nCall context: \nNone\nREF_18 -> extra[1]\nTMP_24(bool) = LOW_LEVEL_CALL, dest:REF_18, function:call, arguments:[] value:_share gas:800000\""
    ],
    "executable_instructions": 34,
    "state_variable": "extra",
    "error": "",
    "result": "UNSAT",
    "execution_details": "# using file ..\/..\/test_cases\/results\/0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6\/tod_symex_path_5.json\n# attack type: range\n# solver type: cvc4\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x8@__GLOBAL__\n    > adding global block: 0x9@__GLOBAL__\n    > adding global block: 0xa@__GLOBAL__\n    > adding global block: 0xb@__GLOBAL__\n    > adding global block: 0xc@__GLOBAL__\n    > adding global block: 0xd@__GLOBAL__\n    > adding global block: 0xe@__GLOBAL__\n    > adding global block: 0xf@__GLOBAL__\n    > adding global block: 0x10@__GLOBAL__\n    > adding global block: 0x13@__GLOBAL__\n    > adding global block: 0x14@__GLOBAL__\n    > adding global block: 0x15@__GLOBAL__\n    > adding global block: 0x22@__GLOBAL__\n    > adding global block: 0x23@__GLOBAL__\n    > adding global block: 0x24@__GLOBAL__\n    > adding global block: 0x32@__GLOBAL__\n    > adding global block: 0x33@__GLOBAL__\n    > adding global block: 0x34@__GLOBAL__\n    > adding global block: 0x43@__GLOBAL__\n    > adding global block: 0x44@__GLOBAL__\n    > adding global block: 0x45@__GLOBAL__\n    > adding global block: 0x53@__GLOBAL__\n    > adding global block: 0x54@__GLOBAL__\n    > adding global block: 0x55@__GLOBAL__\n    > adding global block: 0x64@__GLOBAL__\n    > adding global block: 0x65@__GLOBAL__\n    > adding global block: 0x66@__GLOBAL__\n    > adding global block: 0x75@__GLOBAL__\n    > adding global block: 0x76@__GLOBAL__\n    > adding global block: 0x77@__GLOBAL__\n    > adding global block: 0x8b@__GLOBAL__\n    > adding global block: 0x8c@__GLOBAL__\n    > adding global block: 0x8d@__GLOBAL__\n    > adding global block: 0xa2@__GLOBAL__\n    > adding global block: 0xa3@__GLOBAL__\n    > adding global block: 0xa4@__GLOBAL__\n    > adding global block: 0xba@__GLOBAL__\n    > adding global block: 0xbb@__GLOBAL__\n    > adding global block: 0xbc@__GLOBAL__\n    > adding global block: 0xd1@__GLOBAL__\n    > adding global block: 0xd2@__GLOBAL__\n    > adding global block: 0xd3@__GLOBAL__\n    > adding global block: 0xe9@__GLOBAL__\n    > adding global block: 0xea@__GLOBAL__\n    > adding global block: 0xeb@__GLOBAL__\n    > adding global block: 0x12e@__GLOBAL__\n    > adding global block: 0x12f@__GLOBAL__\n    > adding global block: 0x130@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: extra\n    > initializing global variable: extra\n    > declaring global variable: _addy\n    > initializing global variable: _addy\n    > declaring global variable: _share\n    > initializing global variable: _share\n    > declaring global variable: _count\n    > initializing global variable: _count\n    > declaring global variable: target\n    > initializing global variable: target\n    > declaring global variable: master\n    > initializing global variable: master\n    > declaring global variable: owner\n    > initializing global variable: owner\n\n    > declaring global variable: puppets\n    > initializing global variable: puppets\n\n\n\n\n    > declaring global variable: Splitter\n    > initializing global variable: Splitter\n    > declaring global variable: Puppet\n    > initializing global variable: Puppet\n    > declaring global variable: SafeMath\n    > initializing global variable: SafeMath\n# building ranges\n  > start adding range variables\n    > adding: puppets -> (0x2@__RANGE__ 0x4@__RANGE__)\n    > adding: extra -> (0x2@__RANGE__ 0x5@__RANGE__)\n    > adding: _share -> (0x2@__RANGE__ 0x12@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x5@__RANGE__ 0x4@__RANGE__ 0x12@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x4@__RANGE__\n    > adding range block: 0x3@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x11@__RANGE__\n# building normal scopes\n  > root addr: 0x131\n  > dest addrs: (0x135)\n  > loading normal blocks\n    > adding normal block: 0x131\n    > adding normal block: 0x132\n    > adding normal block: 0x132_r0\n    > adding normal block: 0x134\n    > adding normal block: 0x135\n    > adding normal block: 0x136\n    > adding normal block: 0x137\n    > adding normal block: 0x133\n    > adding normal block: 0x138\n    > adding normal block: 0x139\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 4\n# using solver: #<cvc4>\n# result: #f\n"
}