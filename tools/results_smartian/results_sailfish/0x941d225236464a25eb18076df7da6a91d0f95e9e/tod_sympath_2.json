{
    "file_name": "tod_symex_path_2.json",
    "from_function": "CashOut",
    "bug_type": "tod_transfer",
    "src_node": "\"BlockID: 71\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 73\nCall context: \nTrue\nTMP_7(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:_am \""
    ],
    "executable_instructions": 61,
    "state_variable": "lastBlock",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file ..\/..\/test_cases\/results\/0x941d225236464a25eb18076df7da6a91d0f95e9e\/tod_symex_path_2.json\n# attack type: range\n# solver type: cvc4\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x3@__GLOBAL__\n    > adding global block: 0x4@__GLOBAL__\n    > adding global block: 0x24@__GLOBAL__\n    > adding global block: 0x25@__GLOBAL__\n    > adding global block: 0x26@__GLOBAL__\n    > adding global block: 0x3b@__GLOBAL__\n    > adding global block: 0x3c@__GLOBAL__\n    > adding global block: 0x3d@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: balances\n    > initializing global variable: balances\n    > declaring global variable: lastBlock\n    > initializing global variable: lastBlock\n    > declaring global variable: History\n    > initializing global variable: History\n    > declaring global variable: LastMsg\n    > initializing global variable: LastMsg\n    > declaring global variable: MinDeposit\n    > initializing global variable: MinDeposit\n\n    > declaring global variable: TransferLog\n    > initializing global variable: TransferLog\n\n    > declaring global variable: ETH_FUND\n    > initializing global variable: ETH_FUND\n    > declaring global variable: Log\n    > initializing global variable: Log\n# building ranges\n  > start adding range variables\n    > adding: LastMsg -> (0x2@__RANGE__ 0xb@__RANGE__ 0xd@__RANGE__ 0xf@__RANGE__ 0x11@__RANGE__ 0x19@__RANGE__ 0x1b@__RANGE__ 0x1d@__RANGE__ 0x1f@__RANGE__)\n    > adding: History -> (0x2@__RANGE__ 0x13@__RANGE__ 0x21@__RANGE__)\n    > adding: balances -> (0x2@__RANGE__ 0x15@__RANGE__ 0x23@__RANGE__)\n    > adding: lastBlock -> (0x2@__RANGE__ 0x17@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x1f@__RANGE__ 0x1d@__RANGE__ 0x21@__RANGE__ 0xd@__RANGE__ 0x1b@__RANGE__ 0x13@__RANGE__ 0x15@__RANGE__ 0xf@__RANGE__ 0x23@__RANGE__ 0x17@__RANGE__ 0x11@__RANGE__ 0x19@__RANGE__ 0xb@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0x13@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x15@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x17@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x19@__RANGE__\n    > adding range block: 0x18@__RANGE__\n    > adding range block: 0x1b@__RANGE__\n    > adding range block: 0x1a@__RANGE__\n    > adding range block: 0x1d@__RANGE__\n    > adding range block: 0x1c@__RANGE__\n    > adding range block: 0x1f@__RANGE__\n    > adding range block: 0x1e@__RANGE__\n    > adding range block: 0x21@__RANGE__\n    > adding range block: 0x20@__RANGE__\n    > adding range block: 0x23@__RANGE__\n    > adding range block: 0x22@__RANGE__\n# building normal scopes\n  > root addr: 0x41\n  > dest addrs: (0x3e)\n  > loading normal blocks\n    > adding normal block: 0x3e\n    > adding normal block: 0x3f\n    > adding normal block: 0x41\n    > adding normal block: 0x40\n# start interpretation of normal blocks...\n\n# asserts size: 3\n# using solver: #<cvc4>\n# result: #t\n"
}