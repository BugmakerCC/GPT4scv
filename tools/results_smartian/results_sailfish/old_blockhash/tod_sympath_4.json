{
    "file_name": "tod_symex_path_4.json",
    "from_function": "settle",
    "bug_type": "tod_transfer",
    "src_node": "\"BlockID: 44\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 47\nCall context: \nTrue\nTransfer dest:msg.sender value:2000000000000000000\""
    ],
    "executable_instructions": 47,
    "state_variable": "guesses.guess",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file ..\/..\/test_cases\/results\/old_blockhash\/tod_symex_path_4.json\n# attack type: range\n# solver type: cvc4\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x21@__GLOBAL__\n    > adding global block: 0x22@__GLOBAL__\n    > adding global block: 0x23@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: guesses\n    > initializing global variable: guesses\n    > declaring global variable: PredictTheBlockHashChallenge\n    > initializing global variable: PredictTheBlockHashChallenge\n# building ranges\n  > start adding range variables\n    > adding: guesses -> (0x2@__RANGE__ 0x4@__RANGE__ 0x7@__RANGE__ 0xa@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x7@__RANGE__ 0x4@__RANGE__ 0xa@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x4@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x3@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0x8@__RANGE__\n    > adding range block: 0x6@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0x9@__RANGE__\n# building normal scopes\n  > root addr: 0x24\n  > dest addrs: (0x27)\n  > loading normal blocks\n    > adding normal block: 0x24\n    > adding normal block: 0x25\n    > adding normal block: 0x25_r0\n    > adding normal block: 0x26\n    > adding normal block: 0x27\n    > adding normal block: 0x28\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 2\n# using solver: #<cvc4>\n# result: #t\n"
}