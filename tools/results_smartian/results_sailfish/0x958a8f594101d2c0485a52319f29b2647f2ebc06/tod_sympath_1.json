{
    "file_name": "tod_symex_path_1.json",
    "from_function": "sendMessage",
    "to_function": "acceptOwnership",
    "bug_type": "tod_amount_or_receiver",
    "src_node": "\"BlockID: 199\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 205\nCall context: \nTrue\nREF_10 -> BALANCE this\nTransfer dest:owner value:REF_10\""
    ],
    "executable_instructions": 85,
    "state_variable": "owner",
    "error": "",
    "result": "UNSAT",
    "execution_details": "# using file ..\/..\/test_cases\/results\/0x958a8f594101d2c0485a52319f29b2647f2ebc06\/tod_symex_path_1.json\n# attack type: range\n# solver type: cvc4\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x6@__GLOBAL__\n    > adding global block: 0x9@__GLOBAL__\n    > adding global block: 0x28@__GLOBAL__\n    > adding global block: 0x29@__GLOBAL__\n    > adding global block: 0x2a@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: newOwner\n    > initializing global variable: newOwner\n    > declaring global variable: partner1\n    > initializing global variable: partner1\n    > declaring global variable: partner2\n    > initializing global variable: partner2\n    > declaring global variable: marriageDate\n    > initializing global variable: marriageDate\n    > declaring global variable: marriageStatus\n    > initializing global variable: marriageStatus\n    > declaring global variable: vows\n    > initializing global variable: vows\n    > declaring global variable: majorEvents\n    > initializing global variable: majorEvents\n    > declaring global variable: messages\n    > initializing global variable: messages\n    > declaring global variable: owner\n    > initializing global variable: owner\n\n\n    > declaring global variable: Owned\n    > initializing global variable: Owned\n    > declaring global variable: Marriage\n    > initializing global variable: Marriage\n# building ranges\n  > start adding range variables\n    > adding: owner -> (0x2@__RANGE__ 0x8@__RANGE__)\n    > adding: newOwner -> (0x2@__RANGE__ 0xd@__RANGE__)\n    > adding: partner1 -> (0x2@__RANGE__ 0xf@__RANGE__)\n    > adding: partner2 -> (0x2@__RANGE__ 0x12@__RANGE__)\n    > adding: marriageDate -> (0x2@__RANGE__ 0x15@__RANGE__)\n    > adding: vows -> (0x2@__RANGE__ 0x18@__RANGE__)\n    > adding: marriageStatus -> (0x2@__RANGE__ 0x1b@__RANGE__ 0x27@__RANGE__)\n    > adding: majorEvents -> (0x2@__RANGE__ 0x1e@__RANGE__ 0x21@__RANGE__ 0x24@__RANGE__)\n    > adding: messages -> (0x2@__RANGE__ 0x22@__RANGE__)\n  > range entry addresses: (0x8@__RANGE__ 0x2@__RANGE__ 0x21@__RANGE__ 0xd@__RANGE__ 0x24@__RANGE__ 0x22@__RANGE__ 0x1b@__RANGE__ 0x27@__RANGE__ 0x12@__RANGE__ 0x15@__RANGE__ 0xf@__RANGE__ 0x18@__RANGE__ 0x1e@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x8@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x13@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x15@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x18@__RANGE__\n    > adding range block: 0x19@__RANGE__\n    > adding range block: 0x17@__RANGE__\n    > adding range block: 0x1b@__RANGE__\n    > adding range block: 0x1c@__RANGE__\n    > adding range block: 0x1a@__RANGE__\n    > adding range block: 0x1e@__RANGE__\n    > adding range block: 0x1f@__RANGE__\n    > adding range block: 0x1d@__RANGE__\n    > adding range block: 0x21@__RANGE__\n    > adding range block: 0x20@__RANGE__\n    > adding range block: 0x22@__RANGE__\n    > adding range block: 0x24@__RANGE__\n    > adding range block: 0x25@__RANGE__\n    > adding range block: 0x23@__RANGE__\n    > adding range block: 0x27@__RANGE__\n    > adding range block: 0x26@__RANGE__\n# building normal scopes\n  > root addr: 0x32\n  > dest addrs: (0x2d)\n  > loading normal blocks\n    > adding normal block: 0x2b\n    > adding normal block: 0x2c\n    > adding normal block: 0x2d\n    > adding normal block: 0x2f\n    > adding normal block: 0x30\n    > adding normal block: 0x30_r0\n    > adding normal block: 0x31\n    > adding normal block: 0x32\n    > adding normal block: 0x33\n    > adding normal block: 0x34\n    > adding normal block: 0x35\n    > adding normal block: 0x2e\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 3\n# using solver: #<cvc4>\n# result: #f\n"
}