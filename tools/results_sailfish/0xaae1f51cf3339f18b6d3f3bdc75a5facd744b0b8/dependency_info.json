{
    "0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect",
                "SetLogFile"
            ],
            "from_function": "SetLogFile",
            "to_function": "Collect",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 6\nFunction: SetLogFile\nNode: \nEXPRESSION Log = LogFile(_log)\nIRS: \nLog := TMP_0\"",
                        "\"BlockID: 18\nFunction: Collect\nNode: \nEXPRESSION Log.AddMessage(msg.sender,_am,Collect)\nIRS: \nHIGH_LEVEL_CALL, dest:Log(LogFile), function:AddMessage, arguments:['msg.sender', '_am', 'Collect']  \""
                    ],
                    "state_variable": "Log"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect",
                "Collect"
            ],
            "from_function": "Collect",
            "to_function": "Collect",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: Collect\nNode: \nIF balances[msg.sender] >= MinSum && balances[msg.sender] >= _am\nIRS: \nCONDITION TMP_4\"",
                        "\"BlockID: 17\nFunction: Collect\nNode: \nEXPRESSION balances[msg.sender] -= _am\nIRS: \nREF_6 = REF_6 - _am\""
                    ],
                    "state_variable": "balances"
                }
            ]
        },
        {
            "attack_type": "TOD",
            "composed_functions": [
                "Collect",
                "SetMinSum"
            ],
            "First_function": "SetMinSum",
            "Second_function": "Collect",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: SetMinSum\nNode: \nEXPRESSION MinSum = _val\nIRS: \nMinSum := _val\"",
                        "\"BlockID: 13\nFunction: Collect\nNode: \nIF balances[msg.sender] >= MinSum && balances[msg.sender] >= _am\nIRS: \nCONDITION TMP_4\""
                    ],
                    "state_variable": "MinSum"
                }
            ]
        },
        {
            "attack_type": "TOD",
            "composed_functions": [
                "Collect",
                "Deposit"
            ],
            "First_function": "Deposit",
            "Second_function": "Collect",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 10\nFunction: Deposit\nNode: \nEXPRESSION balances[msg.sender] += msg.value\nIRS: \nREF_0 = REF_0 + msg.value\"",
                        "\"BlockID: 13\nFunction: Collect\nNode: \nIF balances[msg.sender] >= MinSum && balances[msg.sender] >= _am\nIRS: \nCONDITION TMP_4\""
                    ],
                    "state_variable": "balances"
                }
            ]
        },
        {
            "attack_type": "TOD",
            "composed_functions": [
                "Collect",
                "Collect"
            ],
            "First_function": "Collect",
            "Second_function": "Collect",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect\nNode: \nEXPRESSION balances[msg.sender] -= _am\nIRS: \nREF_6 = REF_6 - _am\"",
                        "\"BlockID: 13\nFunction: Collect\nNode: \nIF balances[msg.sender] >= MinSum && balances[msg.sender] >= _am\nIRS: \nCONDITION TMP_4\""
                    ],
                    "state_variable": "balances"
                }
            ]
        },
        {
            "attack_type": "TOD",
            "composed_functions": [
                "Collect",
                "fallback"
            ],
            "First_function": "fallback",
            "Second_function": "Collect",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: Deposit\nNode: \nEXPRESSION balances[msg.sender] += msg.value\nIRS: \nREF_0 = REF_0 + msg.value\"",
                        "\"BlockID: 13\nFunction: Collect\nNode: \nIF balances[msg.sender] >= MinSum && balances[msg.sender] >= _am\nIRS: \nCONDITION TMP_4\""
                    ],
                    "state_variable": "balances"
                }
            ]
        }
    ]
}