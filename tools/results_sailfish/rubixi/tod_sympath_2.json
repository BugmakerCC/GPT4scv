{
    "file_name": "tod_symex_path_2.json",
    "from_function": "fallback",
    "bug_type": "tod_transfer",
    "src_node": "\"BlockID: 310\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 322\nCall context: ,init\nTrue\npyramidMultiplier := 150\""
    ],
    "executable_instructions": 96,
    "state_variable": "participants",
    "error": "",
    "result": "UNSAT",
    "execution_details": "# using file ..\/..\/test_cases\/results\/rubixi\/tod_symex_path_2.json\n# attack type: range\n# solver type: cvc4\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x4@__GLOBAL__\n    > adding global block: 0x5@__GLOBAL__\n    > adding global block: 0x6@__GLOBAL__\n    > adding global block: 0x7@__GLOBAL__\n    > adding global block: 0x8@__GLOBAL__\n    > adding global block: 0x40@__GLOBAL__\n    > adding global block: 0x41@__GLOBAL__\n    > adding global block: 0x42@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: creator\n    > initializing global variable: creator\n    > declaring global variable: participants\n    > initializing global variable: participants\n    > declaring global variable: collectedFees\n    > initializing global variable: collectedFees\n\n    > declaring global variable: feePercent\n    > initializing global variable: feePercent\n\n    > declaring global variable: pyramidMultiplier\n    > initializing global variable: pyramidMultiplier\n\n    > declaring global variable: payoutOrder\n    > initializing global variable: payoutOrder\n\n    > declaring global variable: balance\n    > initializing global variable: balance\n\n    > declaring global variable: Rubixi\n    > initializing global variable: Rubixi\n# building ranges\n  > start adding range variables\n    > adding: creator -> (0x2@__RANGE__ 0x3@__RANGE__ 0x10@__RANGE__)\n    > adding: collectedFees -> (0x2@__RANGE__ 0xa@__RANGE__ 0xd@__RANGE__ 0x24@__RANGE__ 0x26@__RANGE__ 0x2b@__RANGE__ 0x2f@__RANGE__)\n    > adding: pyramidMultiplier -> (0x2@__RANGE__ 0x12@__RANGE__ 0x18@__RANGE__ 0x1b@__RANGE__)\n    > adding: feePercent -> (0x2@__RANGE__ 0x14@__RANGE__)\n    > adding: participants -> (0x2@__RANGE__ 0x16@__RANGE__)\n    > adding: balance -> (0x2@__RANGE__ 0x1f@__RANGE__ 0x21@__RANGE__)\n    > adding: payoutOrder -> (0x2@__RANGE__ 0x28@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x3@__RANGE__ 0x1f@__RANGE__ 0x21@__RANGE__ 0xd@__RANGE__ 0x16@__RANGE__ 0x14@__RANGE__ 0x24@__RANGE__ 0x2b@__RANGE__ 0x1b@__RANGE__ 0x12@__RANGE__ 0x2f@__RANGE__ 0xa@__RANGE__ 0x18@__RANGE__ 0x26@__RANGE__ 0x28@__RANGE__ 0x10@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x3@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0x9@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x13@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x15@__RANGE__\n    > adding range block: 0x1b@__RANGE__\n    > adding range block: 0x1c@__RANGE__\n    > adding range block: 0x1d@__RANGE__\n    > adding range block: 0x1a@__RANGE__\n    > adding range block: 0x21@__RANGE__\n    > adding range block: 0x22@__RANGE__\n    > adding range block: 0x20@__RANGE__\n    > adding range block: 0x26@__RANGE__\n    > adding range block: 0x25@__RANGE__\n    > adding range block: 0x28@__RANGE__\n    > adding range block: 0x29@__RANGE__\n    > adding range block: 0x27@__RANGE__\n    > adding range block: 0x2f@__RANGE__\n    > adding range block: 0x30@__RANGE__\n    > adding range block: 0x2e@__RANGE__\n# building normal scopes\n  > root addr: 0x43\n  > dest addrs: (0x4f)\n  > loading normal blocks\n    > adding normal block: 0x43\n    > adding normal block: 0x44\n    > adding normal block: 0x45\n    > adding normal block: 0x46\n    > adding normal block: 0x48\n    > adding normal block: 0x49\n    > adding normal block: 0x4a\n    > adding normal block: 0x4c\n    > adding normal block: 0x4d\n    > adding normal block: 0x4e\n    > adding normal block: 0x4f\n    > adding normal block: 0x4b\n    > adding normal block: 0x47\n# start interpretation of normal blocks...\n\n# asserts size: 8\n# using solver: #<cvc4>\n# result: #f\n"
}