WARNING:root:You are using solc version 0.4.26, The latest supported version is 0.4.19
INFO:CryticCompile:Compilation warnings/errors on /sb/list_dos.sol:
/sb/list_dos.sol:23:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function Government() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:37:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             msg.sender.send(amount);
             ^---------------------^
/sb/list_dos.sol:39:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);
             ^-------------------------------------------------------------------^
/sb/list_dos.sol:40:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
             corruptElite.send(this.balance);
                               ^----------^
/sb/list_dos.sol:40:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             corruptElite.send(this.balance);
             ^-----------------------------^
/sb/list_dos.sol:62:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 corruptElite.send(amount * 5/100);
                 ^-------------------------------^
/sb/list_dos.sol:70:22: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                     buddy.send(amount * 5/100);
                     ^------------------------^
/sb/list_dos.sol:75:22: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);
                     ^---------------------------------------------------------------------------------^
/sb/list_dos.sol:82:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 msg.sender.send(amount);
                 ^---------------------^
/sb/list_dos.sol:23:6: Warning: No visibility specified. Defaulting to "public". 
     function Government() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:26:28: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         profitFromCrash = msg.value;
                           ^-------^
/sb/list_dos.sol:31:6: Warning: No visibility specified. Defaulting to "public". 
     function lendGovernmentMoney(address buddy) returns (bool) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:32:24: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         uint amount = msg.value;
                       ^-------^
/sb/list_dos.sol:89:6: Warning: No visibility specified. Defaulting to "public". 
     function() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:93:6: Warning: No visibility specified. Defaulting to "public". 
     function totalDebt() returns (uint debt) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:99:6: Warning: No visibility specified. Defaulting to "public". 
     function totalPayedOut() returns (uint payout) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:106:6: Warning: No visibility specified. Defaulting to "public". 
     function investInTheSystem() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:107:29: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         profitFromCrash += msg.value;
                            ^-------^
/sb/list_dos.sol:111:6: Warning: No visibility specified. Defaulting to "public". 
     function inheritToNextGeneration(address nextGeneration) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:117:6: Warning: No visibility specified. Defaulting to "public". 
     function getCreditorAddresses() returns (address[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:121:6: Warning: No visibility specified. Defaulting to "public". 
     function getCreditorAmounts() returns (uint[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:93:6: Warning: Function state mutability can be restricted to view
     function totalDebt() returns (uint debt) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:99:6: Warning: Function state mutability can be restricted to view
     function totalPayedOut() returns (uint payout) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:117:6: Warning: Function state mutability can be restricted to view
     function getCreditorAddresses() returns (address[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/list_dos.sol:121:6: Warning: Function state mutability can be restricted to view
     function getCreditorAmounts() returns (uint[]) {
     ^ (Relevant source part starts here and spans across multiple lines).

INFO:root:contract /sb/list_dos.sol:Government:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 41.9%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  True
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 True
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/sb/list_dos.sol:39:32: Warning: Integer Underflow.
             creditorAddresses[creditorAddresses.length - 1
Integer Underflow occurs if:
    creditorAddresses.length = 0
    lastTimeOfNewCredit = 115792089237316195423570985008687907853269984665640564039457584007913129596736
INFO:symExec:/sb/list_dos.sol:16:6: Warning: Integer Overflow.
     address[] public creditorAddresses
/sb/list_dos.sol:17:6: Warning: Integer Overflow.
     uint[] public creditorAmounts
/sb/list_dos.sol:35:14: Warning: Integer Overflow.
         if (lastTimeOfNewCredit + TWELVE_HOURS
Integer Overflow occurs if:
    lastTimeOfNewCredit = 115792089237316195423570985008687907853269984665640564039457584007913129608000
INFO:symExec:/sb/list_dos.sol:39:14: Warning: Callstack Depth Attack Vulnerability.
             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash)
/sb/list_dos.sol:40:14: Warning: Callstack Depth Attack Vulnerability.
             corruptElite.send(this.balance)
/sb/list_dos.sol:62:18: Warning: Callstack Depth Attack Vulnerability.
                 corruptElite.send(amount * 5/100)
/sb/list_dos.sol:70:22: Warning: Callstack Depth Attack Vulnerability.
                     buddy.send(amount * 5/100)
/sb/list_dos.sol:75:22: Warning: Callstack Depth Attack Vulnerability.
                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut])
INFO:symExec:/sb/list_dos.sol:35:10: Warning: Timestamp Dependency.
         if (lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp) {
         ^
Spanning multiple lines.
INFO:symExec:	====== Analysis Completed ======
