WARNING:root:You are using solc version 0.4.26, The latest supported version is 0.4.19
INFO:CryticCompile:Compilation warnings/errors on /sb/open_address_lottery.sol:
/sb/open_address_lottery.sol:41:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function OpenAddressLottery() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/open_address_lottery.sol:91:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        SeedComponents s;
        ^--------------^
/sb/open_address_lottery.sol:58:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            if(win>this.balance) //if the balance isnt sufficient...
                   ^----------^
/sb/open_address_lottery.sol:59:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
                win=this.balance; //...send everything we've got
                    ^----------^
/sb/open_address_lottery.sol:69:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        n = uint(keccak256(uint(addr), secretSeed)[0]) % 8;
                 ^-------------------------------^
/sb/open_address_lottery.sol:73:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        secretSeed = uint256(keccak256(
                             ^ (Relevant source part starts here and spans across multiple lines).
/sb/open_address_lottery.sol:91:9: Warning: Uninitialized storage pointer. Did you mean '<type> memory s'?
        SeedComponents s;
        ^--------------^
/sb/open_address_lottery.sol:41:5: Warning: No visibility specified. Defaulting to "public". 
    function OpenAddressLottery() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/open_address_lottery.sol:46:5: Warning: No visibility specified. Defaulting to "public". 
    function participate() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/open_address_lottery.sol:67:5: Warning: No visibility specified. Defaulting to "public". 
    function luckyNumberOfAddress(address addr) constant returns(uint n){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/open_address_lottery.sol:82:5: Warning: No visibility specified. Defaulting to "public". 
    function kill() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/open_address_lottery.sol:88:5: Warning: No visibility specified. Defaulting to "public". 
    function forceReseed() { //reseed initiated by the owner - for testing purposes
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/open_address_lottery.sol:93:32: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        s.component2 = uint256(block.blockhash(block.number - 1));
                               ^-------------^
/sb/open_address_lottery.sol:100:5: Warning: No visibility specified. Defaulting to "public". 
    function () payable { //if someone sends money without any function call, just assume he wanted to participate
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:root:contract /sb/open_address_lottery.sol:OpenAddressLottery:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 98.2%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): True
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/sb/open_address_lottery.sol:63:12: Warning: Integer Underflow.
        if(block.number-lastReseed
Integer Underflow occurs if:
    lastReseed = 1
    LuckyNumber = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    winner[msg.sender] = 0
    owner = 0
/sb/open_address_lottery.sol:93:48: Warning: Integer Underflow.
        s.component2 = uint256(block.blockhash(block.number - 1
Integer Underflow occurs if:
    owner = 0
INFO:symExec:Flow1
/sb/open_address_lottery.sol:60:13: Warning: Transaction-Ordering Dependency.
            msg.sender.transfer(win)
Flow2
/sb/open_address_lottery.sol:60:13: Warning: Transaction-Ordering Dependency.
            msg.sender.transfer(win)
INFO:symExec:	====== Analysis Completed ======
