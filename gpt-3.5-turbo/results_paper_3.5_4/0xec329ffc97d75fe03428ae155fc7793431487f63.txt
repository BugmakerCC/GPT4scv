Here is an analysis of the smart contract for the vulnerabilities you mentioned:

1. Reentrancy: The contract does not make any external calls, so reentrancy is not a concern.

2. Access Control: The contract uses the "onlyOwner" modifier to restrict access to certain functions to the contract owner only.

3. Arithmetic Issues: There are no arithmetic operations in the contract, so arithmetic issues are not a concern.

4. Unchecked Return Values: The contract does not make any low-level calls, so unchecked return values are not a concern.

5. Denial of Service: The contract does not have any functionality that could be exploited for denial of service attacks.

6. Bad Randomness: The contract does not use any randomness, so bad randomness is not a concern.

7. Front-Running: The contract does not have any functionality that could be exploited for front-running attacks.

8. Time Manipulation: The contract does not rely on timestamps for any critical functionality, so time manipulation is not a concern.

9. Short Address Attack: The contract does not have any functionality that could be exploited for short address attacks.

Overall, the contract appears to be secure and does not have any of the vulnerabilities you mentioned.