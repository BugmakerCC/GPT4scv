The provided smart contract does not contain any of the nine common vulnerabilities mentioned. Here is a breakdown of the vulnerabilities and their absence in the given code:

1. Reentrancy: There are no external contract calls that could potentially create a reentrancy vulnerability.

2. Access Control: There are no access modifiers or permission checks in the contract, so access control is not a concern.

3. Arithmetic Issues: There are no arithmetic operations involving addition, subtraction, multiplication, or division that could lead to integer overflow or underflow.

4. Unchecked Return Values For Low-Level Calls: There are no low-level calls (`call`, `delegatecall`, `send`, etc.) in the contract, so this vulnerability does not apply.

5. Denial of Service: There are no gas limit-related issues, unexpected throws, or kill functions that could cause a denial of service.

6. Bad Randomness: There is no randomness generation in the contract that could be manipulated or predictable.

7. Front-Running: There are no external interactions or dependencies on the order of transactions.

8. Time Manipulation: There is no reliance on timestamps or time-dependent behavior in the contract.

9. Short Address Attack: There are no off-chain issues or client vulnerabilities in the contract.

Overall, the provided smart contract appears to be free from the mentioned vulnerabilities.