Upon reviewing the provided smart contract, I have identified the following vulnerabilities:

1. Time Manipulation: The contract uses the `now` keyword to manipulate time. This can be exploited by an attacker to control the execution flow and potentially bypass certain conditions.

2. Time Manipulation: The `randomGen` function uses `block.timestamp` to generate a random number. However, `block.timestamp` can be manipulated by miners to influence the outcome, leading to a predictable or biased random number generation.

To mitigate these vulnerabilities, consider using a secure source of randomness, such as an oracle or a commit-reveal scheme. Additionally, avoid relying on `now` or `block.timestamp` for critical operations.

Please note that this analysis may not cover all possible vulnerabilities, and it is always recommended to conduct a thorough security audit of your smart contract code.