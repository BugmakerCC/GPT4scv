The provided smart contract does not contain any of the nine common vulnerabilities. 

1. Reentrancy: The contract does not make any external calls to other contracts, so there is no opportunity for reentrancy attacks.
2. Access Control: There are no functions that restrict access to certain roles or addresses, so there is no access control vulnerability.
3. Arithmetic Issues: The SafeMath library is used for arithmetic operations, which prevents integer overflow and underflow vulnerabilities.
4. Unchecked Return Values For Low Level Calls: There are no low-level calls in the contract that require checking return values.
5. Denial of Service: There are no features or functions in the contract that can be abused to cause denial of service.
6. Bad Randomness: The contract does not use random numbers, so there is no vulnerability related to bad randomness.
7. Front-Running: The contract does not involve any transaction ordering or time-dependent operations, so there is no front-running vulnerability.
8. Time manipulation: The contract does not rely on timestamps or time-dependent operations, so there is no time manipulation vulnerability.
9. Short Address Attack: The contract does not have any off-chain issues or client vulnerabilities.

Overall, the provided smart contract appears to be secure against the common vulnerabilities listed.