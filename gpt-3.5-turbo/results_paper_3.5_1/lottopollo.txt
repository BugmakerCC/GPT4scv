After analyzing the provided smart contract, here are the vulnerabilities that can be identified:

1. Time Manipulation: The contract uses the `now` keyword to check if a certain time condition is met. However, this can be manipulated by an attacker to control the execution flow of the contract.

2. Time Dependency: The `randomGen()` function uses `block.timestamp` to generate a random number. However, `block.timestamp` can be manipulated by miners to influence the outcome of the random number generation.

To fix these vulnerabilities, it is recommended to use a more secure source of randomness, such as an external oracle or a verifiable decentralized random number generator. Additionally, any time-dependent logic should be carefully implemented to avoid manipulation.