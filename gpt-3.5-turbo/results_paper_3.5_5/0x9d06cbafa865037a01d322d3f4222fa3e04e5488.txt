Based on my analysis, here are the vulnerabilities present in the given smart contract:

1. Reentrancy: The tokens_buy() function makes an external call to the contract at address 'c' using the call() function. This can potentially lead to a reentrancy vulnerability if the called contract performs an unexpected call back to the calling contract before the execution of tokens_buy() is completed.

2. Access Control: The contract does not implement any access control mechanism to restrict certain functions to only authorized users. This may allow unauthorized users to call functions like withdraw(), change_token_price(), and change_active().

3. Arithmetic Issues: The tokens_buy() function performs arithmetic operations without proper checks for integer overflow and underflow. This can lead to unexpected results or vulnerabilities.

4. Unchecked Return Values for Low-Level Calls: The tokens_buy() function calls the transferFrom() function of the contract at address 'c' without checking the return value. If the transferFrom() function fails, the tokens_buy() function will still continue execution, potentially leading to unexpected behavior.

5. Denial of Service: The tokens_buy() function does not have any gas limit checks, allowing an attacker to consume all the gas of the transaction, causing a denial of service.

6. Bad Randomness: The contract does not implement any secure random number generation mechanism, which can be exploited by attackers to manipulate the outcome of random events.

7. Front-Running: The contract does not have any measures to prevent front-running attacks, where an attacker can manipulate the transaction ordering to their advantage.

8. Time Manipulation: The contract does not have any protection against timestamp manipulation, which can be used by attackers to exploit time-dependent functions.

9. Short Address Attack: The contract does not have any checks for short address attacks, where an attacker can exploit client vulnerabilities to manipulate the length of the input data.

It is recommended to address these vulnerabilities to ensure the security and reliability of the smart contract.